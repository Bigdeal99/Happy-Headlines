services:
  # ----------------------
  # Article Service + DBs
  # ----------------------
  article-service:
    image: article-service:latest
    build: ./ArticleService
    deploy:
      replicas: 1  # use 1 replica so Prometheus sees all hits on one instance
      restart_policy:
        condition: on-failure
    environment:
      - DB_CONNECTION=Server=article-db-global;Database=Articles;User=sa;Password=Your_password123;Encrypt=False;TrustServerCertificate=True
      - OTLP_ENDPOINT=http://jaeger:4317
      - REDIS_CONNECTION=redis:6379

    ports:
      - "8080:8080"   

  # Global + 7 continent DBs
  article-db-global:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"

  article-db-europe:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-asia:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-africa:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-north-america:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-south-america:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-oceania:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-antarctica:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  # ----------------------
  # Comment Service + DB
  # ----------------------
  comment-service:
    image: comment-service:latest
    build: ./CommentService
    deploy:
      replicas: 1  # use 1 replica so Prometheus sees all hits on one instance
      restart_policy:
        condition: on-failure
    environment:
      - DB_CONNECTION=Server=comment-db;Database=Comments;User=sa;Password=Your_password123;Encrypt=False;TrustServerCertificate=True
      - PROFANITY_URL=http://profanity-service:8080
      - FALLBACK_PROFANITY_WORDS=bad,ugly,stupid
      - OTLP_ENDPOINT=http://jaeger:4317
      - REDIS_CONNECTION=redis:6379
    ports:
      - "8081:8080"
    depends_on:
      - comment-db
      - profanity-service

  comment-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  # ----------------------
  # Profanity Service + DB
  # ----------------------
  profanity-service:
    image: profanity-service:latest
    build: ./ProfanityService
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - DB_CONNECTION=Server=profanity-db;Database=Profanity;User=sa;Password=Your_password123;Encrypt=False;TrustServerCertificate=True
      - OTLP_ENDPOINT=http://jaeger:4317
    ports:
      - "8082:8080"
    depends_on:
      - profanity-db

  profanity-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
  # ----------------------
  # Draft Service + DB
  # ----------------------
  draft-service:
    image: draft-service:latest
    build: ./DraftService
    environment:
      - DB_CONNECTION=Server=draft-db;Database=Drafts;User=sa;Password=Your_password123;Encrypt=False;TrustServerCertificate=True
      - SEQ_URL=http://seq:5341
      - OTLP_ENDPOINT=http://jaeger:4317
    ports:
      - "8083:8080"
    depends_on:
      - draft-db
      - seq

  draft-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    ports:
      - "1434:1433"   # avoid clashing with the global DB

  # ----------------------
  # Centralized logging (Seq)
  # ----------------------
  seq:
    image: datalust/seq:2024.1
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "8087:80"     # Seq UI (changed to avoid host conflict)
      - "5341:5341"   # ingestion API
  # ----------------------
  # Messaging + Tracing
  # ----------------------
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
  prometheus:
    image: prom/prometheus:v2.55.1
    volumes:
      - ./docs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:11.2.0
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5673:5672"     # AMQP (changed host port to avoid conflicts)
      - "15673:15672"   # RabbitMQ UI http://localhost:15673 (guest/guest)

  jaeger:
    image: jaegertracing/all-in-one:1.57
    environment:
      - COLLECTOR_OTLP_ENABLED=true  # enable OTLP receiver on 4317
    ports:
      - "16686:16686"   # Jaeger UI http://localhost:16686
      - "4317:4317"     # OTLP (gRPC) endpoint for OpenTelemetry exporters
  publisher-service:
    image: publisher-service:latest
    build: ./PublisherService
    environment:
      - PROFANITY_URL=http://profanity-service:8080
      - RABBIT_HOST=rabbitmq
      - OTLP_ENDPOINT=http://jaeger:4317
    ports:
      - "8084:8080"
    depends_on:
      - rabbitmq
      - profanity-service
      - jaeger

  newsletter-service:
    image: newsletter-service:latest
    build: ./NewsletterService
    environment:
      - ARTICLE_URL=http://article-service:8080
      - OTLP_ENDPOINT=http://jaeger:4317
    depends_on:
      - article-service
      - jaeger
      - redis
    ports:
      - "8086:8080"
