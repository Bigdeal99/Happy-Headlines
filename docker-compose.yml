services:
  # ----------------------
  # Article Service + DBs
  # ----------------------
  article-service:
    build: ./ArticleService   # ðŸ‘ˆ added build
    image: article-service:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - DB_CONNECTION=Server=article-db-global;Database=Articles;User=sa;Password=Your_password123;Encrypt=False;TrustServerCertificate=True
      - REDIS_CONNECTION=redis:6379
      - OTLP_ENDPOINT=http://jaeger:4317
      - ASPNETCORE_URLS=http://0.0.0.0:8080
      - ENABLE_QUEUE=false
    ports:
      - "8080:8080"
    depends_on:
      - article-db-global
      - redis

  article-db-global:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  # Continent DBs (no ports to avoid conflicts)
  article-db-europe:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-asia:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-africa:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-north-america:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-south-america:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-oceania:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  article-db-antarctica:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  # ----------------------
  # Comment Service + DB
  # ----------------------
  comment-service:
    build: ./CommentService   # ðŸ‘ˆ added build
    image: comment-service:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - DB_CONNECTION=Server=comment-db;Database=Comments;User=sa;Password=Your_password123;Encrypt=False;TrustServerCertificate=True
      - PROFANITY_URL=http://profanity-service:8080
      - REDIS_CONNECTION=redis:6379
      - OTLP_ENDPOINT=http://jaeger:4317
      - ASPNETCORE_URLS=http://0.0.0.0:8080
    ports:
      - "8081:8080"
    depends_on:
      - comment-db
      - profanity-service
      - redis

  comment-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P 'Your_password123' -Q 'SELECT 1' -b || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # ----------------------
  # Profanity Service + DB
  # ----------------------
  profanity-service:
    build: ./ProfanityService   # ðŸ‘ˆ added build
    image: profanity-service:latest
    environment:
      - DB_CONNECTION=Server=profanity-db;Database=Profanity;User=sa;Password=Your_password123;Encrypt=False;TrustServerCertificate=True
    ports:
      - "8082:8080"
    depends_on:
      - profanity-db

  profanity-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"

  # ----------------------
  # Draft Service + DB
  # ----------------------
  draft-service:
    build: ./DraftService   # ðŸ‘ˆ added build
    image: draft-service:latest
    environment:
      - DB_CONNECTION=Server=draft-db;Database=Drafts;User=sa;Password=Your_password123;Encrypt=False;TrustServerCertificate=True
      - SEQ_URL=http://seq:5341
    ports:
      - "8083:8080"
    depends_on:
      - draft-db
      - seq

  draft-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    ports:
      - "1434:1433"

  # ----------------------
  # Centralized logging (Seq)
  # ----------------------
  seq:
    image: datalust/seq:2024.1
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "8085:80"
      - "5341:5341"

  # ----------------------
  # Messaging + Tracing
  # ----------------------
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  jaeger:
    image: jaegertracing/all-in-one:1.57
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "4317:4317"

  # ----------------------
  # Monitoring: Prometheus + Grafana
  # ----------------------
  prometheus:
    image: prom/prometheus:v2.53.0
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.0.0
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  publisher-service:
    build: ./PublisherService
    image: publisher-service:latest
    environment:
      - PROFANITY_URL=http://profanity-service:8080
      - RABBIT_HOST=rabbitmq
      - OTLP_ENDPOINT=http://jaeger:4317
    ports:
      - "8084:8080"
    depends_on:
      - rabbitmq
      - profanity-service
      - jaeger

  newsletter-service:
    build: ./NewsletterService
    image: newsletter-service:latest
    environment:
      - ARTICLE_URL=http://article-service:8080
      - OTLP_ENDPOINT=http://jaeger:4317
    ports:
      - "8086:8080"
    depends_on:
      - article-service
      - jaeger

  # ----------------------
  # Redis (for caching)
  # ----------------------
  redis:
    image: redis:7
    ports:
      - "6379:6379"
